rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
library(conics)
library(ggplot2)
library(gridExtra)
library(corpcor)
library(latex2exp)
library(grid)
library(Rfast)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
#
# iter
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
l = list()
l
l = new_element(3)
l = 3
l
l = 4
l
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techu.R")
# Vykreslovanie kriviek do techu
#
plotElipse0 <- function(B,C,D,F,G, interval){
int = interval
plot <- ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_p,
color = "#2196F3", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G)) +
stat_function(data = int, aes(x = x), fun = getElipse_m,
color = "#B71C1C", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G))
return(plot)
}
plotElipse1 <- function(B,C,D,F,G, interval){
int = interval
plot <- ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_m,
color = "#B71C1C", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G))
return(plot)
}
plotElipse2 <- function(B,C,D,F,G, interval){
int = interval
plot <- ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_p,
color = "#2196F3", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G))
return(plot)
}
interval = getXIntervalForElipse(3,-2,-5,-4,10)
a = plotElipse0(3,-2,-5,-4,10, interval)
b = plotElipse1(3,-2,-5,-4,10, interval)
c = plotElipse2(3,-2,-5,-4,10, interval)
grid.arrange(b, c, a, nrow = 1)
# farby
# fialova - #311B92
plotGenDataOnElipse1 = function(B,C,D,F,G,data,intForX){
int = intForX
plot = ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_m,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
stat_function(data = int, aes(x = x), fun = getElipse_p,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
geom_point(aes(x = data$mi, y = data$ni), size = 5, alpha = 0.5, color = "#311B92")
return(plot)
}
data = genDataOnElipse(3,-2,-5,-4,10, 100, interval )
d = plotGenDataOnElipse1(3,-2,-5,-4,10, data, interval)
grid.arrange(a, d, nrow = 1)
set.seed(132)
# vykreslenie zasumenych dat
#
V     = V(0.8, 0.005, 100)
W     = W(0.001, 100, V)
B     = B(W)
data  = genDataOnElipse(3,-2,-5,-4,10, 100,interval)
data1 = genData(data, B)
param = paramElipsa(3,-2,-5,-4,10,0.8,0.005,0.001)
plotGenData1 = function(param, data, intForX){
B   = param[[1]]
C   = param[[2]]
D   = param[[3]]
F   = param[[4]]
G   = param[[5]]
int = intForX
plot1 = ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_m,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
stat_function(data = int, aes(x = x), fun = getElipse_p,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
geom_point(aes(x = data$x, y = data$y), size = 5, alpha = 0.5, color = "#311B92")
return(plot1)
}
e = plotGenData1(param, data1, interval)
grid.arrange(a,d,e, nrow = 1)
grid.arrange(list(a,d,e), nrow = 1)
lis = list(a,d,e)
lis
do.call("grid.arrange", c(lis, ncol=nCol))
do.call("grid.arrange", c(lis, ncol=nCol))
do.call("grid.arrange", c(lis, ncol=2))
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
#
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
lis = list(a)
lis = list(lis, d)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techu.R")
# Vykreslovanie kriviek do techu
#
plotElipse0 <- function(B,C,D,F,G, interval){
int = interval
plot <- ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_p,
color = "#2196F3", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G)) +
stat_function(data = int, aes(x = x), fun = getElipse_m,
color = "#B71C1C", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G))
return(plot)
}
plotElipse1 <- function(B,C,D,F,G, interval){
int = interval
plot <- ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_m,
color = "#B71C1C", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G))
return(plot)
}
plotElipse2 <- function(B,C,D,F,G, interval){
int = interval
plot <- ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_p,
color = "#2196F3", size = 1.3,
args = list(B=B,C=C,D=D,F=F,G=G))
return(plot)
}
interval = getXIntervalForElipse(3,-2,-5,-4,10)
a = plotElipse0(3,-2,-5,-4,10, interval)
b = plotElipse1(3,-2,-5,-4,10, interval)
c = plotElipse2(3,-2,-5,-4,10, interval)
grid.arrange(b, c, a, nrow = 1)
# farby
# fialova - #311B92
plotGenDataOnElipse1 = function(B,C,D,F,G,data,intForX){
int = intForX
plot = ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_m,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
stat_function(data = int, aes(x = x), fun = getElipse_p,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
geom_point(aes(x = data$mi, y = data$ni), size = 5, alpha = 0.5, color = "#311B92")
return(plot)
}
data = genDataOnElipse(3,-2,-5,-4,10, 100, interval )
d = plotGenDataOnElipse1(3,-2,-5,-4,10, data, interval)
grid.arrange(a, d, nrow = 1)
set.seed(132)
# vykreslenie zasumenych dat
#
V     = V(0.8, 0.005, 100)
W     = W(0.001, 100, V)
B     = B(W)
data  = genDataOnElipse(3,-2,-5,-4,10, 100,interval)
data1 = genData(data, B)
param = paramElipsa(3,-2,-5,-4,10,0.8,0.005,0.001)
plotGenData1 = function(param, data, intForX){
B   = param[[1]]
C   = param[[2]]
D   = param[[3]]
F   = param[[4]]
G   = param[[5]]
int = intForX
plot1 = ggplot() +
stat_function(data = int, aes(x = x), fun = getElipse_m,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
stat_function(data = int, aes(x = x), fun = getElipse_p,
alpha = 0.4, size = 1,
args = list(B=B,C=C,D=D,F=F,G=G)) +
geom_point(aes(x = data$x, y = data$y), size = 5, alpha = 0.5, color = "#311B92")
return(plot1)
}
e = plotGenData1(param, data1, interval)
grid.arrange(a,d,e, nrow = 1)
lis = list(a)
lis = list(lis, d)
lis = list(a)
lis = list(lis, d)
lis = list(lis, e)
grid.arrange(list(a,d,e), nrow = 1)
do.call("grid.arrange", c(lis, ncol=2))
lis = list()
lis = list()
lis[1] = a
lis = list()
lis[[1]] = a
lis = list()
lis[[1]] = a
lis[[2]] = d
lis[[3]] = e
do.call("grid.arrange", c(lis, ncol=2))
grid.arrange(list(a,d,e), nrow = 1)
do.call("grid.arrange", c(lis, ncol=2))
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 100, 4, plot = F, vypis = T)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techuplot.R")
# pre pracu generujem 150 dat a 10 iteracii
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 150, 4, plot = F, vypis = T)
######################## Odhad realnych dat ###############
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.0003)
data = generujData(par,100)
data = data[[1]]
parApr = c(0.8, 1, 0)
odhadZRealDat(data, 10, vypis = T)
odhadZRealDat(data, 10, parApr = parApr, vypis = T)
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techu.R")
######################## Odhad realnych dat ###############
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.0003)
data = generujData(par,100)
data = data[[1]]
parApr = c(0.8, 1, 0)
odhadZRealDat(data, 10, vypis = T)
odhadZRealDat(data, 10, parApr = parApr, vypis = T)
odhadZRealDat(data, 4)
a = odhadZRealDat(data, 4)
a
rm(list= ls())
library(conics)
library(ggplot2)
library(gridExtra)
library(corpcor)
library(latex2exp)
library(grid)
library(Rfast)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techu.R")
install.packages(c("pillar", "RcppArmadillo"))
install.packages(c("pillar", "RcppArmadillo"))
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 150, 4, plot = F, vypis = T)
rm(list= ls())
library(conics)
library(ggplot2)
library(gridExtra)
library(corpcor)
library(latex2exp)
library(grid)
library(Rfast)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techu.R")
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 150, 4, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
aproxData(par, parApr, 150, 4, plot = F, vypis = F)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 150, 4, plot = F, vypis = F)
a
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 50, 4, plot = F, vypis = F)
a
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 50, 4, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 50, 10, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 50, 20, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 200, 10, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 300, 10, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 30, 10, plot = F, vypis = T)
set.seed(1)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 30, 10, plot = F, vypis = T)
set.seed(12)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 30, 10, plot = F, vypis = T)
set.seed(123)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 30, 10, plot = F, vypis = T)
set.seed(1234)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 30, 10, plot = F, vypis = T)
set.seed(12345)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 30, 10, plot = F, vypis = T)
set.seed(1)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = T)
set.seed(12)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = T)
set.seed(123)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = T)
set.seed(123)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = F)
a
tm = proc.time()
set.seed(123)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = F)
proc.time() - tm
tm = proc.time()
set.seed(123)
par = paramElipsa(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
parApr = c(0,1,0)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = F)
c = proc.time() - tm
c
c[3]
c[[3]]
tm = proc.time()
set.seed(123)
a = aproxData(par, parApr, 100, 10, plot = F, vypis = F)
c = proc.time() - tm
c
tm = proc.time()
set.seed(123)
a = aproxData(par, parApr, 300, 10, plot = F, vypis = F)
c = proc.time() - tm
c
tm = proc.time()
set.seed(123)
a = aproxData(par, parApr, 200, 10, plot = F, vypis = F)
c = proc.time() - tm
c
rm(list= ls())
library(conics)
library(ggplot2)
library(gridExtra)
library(corpcor)
library(latex2exp)
library(grid)
library(Rfast)
rm(list= ls())
source("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Uprava_kodu_do_techu.R")
#
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Testy/PocetDat")
load("vystupTestPocetDatNastavenie1.Rda")
data1 = vystupTest
load("vystupTestPocetDatNastavenie2.Rda")
data2 = vystupTest
rm(vystupTest)
data1[591,9:16] = 3
data1[43, 9:16] = c(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
data1[14, 9:16] = c(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
data1[24, 9:16] = c(3,-2,-5,-4,10, 0.8, 0.005, 0.001)
v = seq(10,300, by = 10)
s = c(9:16)
k = 1
l = 1
std = matrix(NA, nrow = 30, ncol = 8)
colnames(std) = c("oB","oC","oD","oF","oG","oRo","oSigma","oDelta")
