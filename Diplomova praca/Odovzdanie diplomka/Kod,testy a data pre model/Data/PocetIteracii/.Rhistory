#            position = position_jitter(width = 0.9, height = 0.3),
#            size = 2,alpha = 0.4) +
geom_point(data = novedata[novedata$pocet == 100,],aes(x = pocet, y = data)) +
labs(y="parametre elispy", x="veľkosť vstupných dát (x,y)") +
theme(legend.position="bottom") +
labs(colour = "parametre\nelipsy", fill = "parametre\nodhad") +
guides(colour = guide_legend(nrow = 2, override.aes = list(size = 1)),
fill = guide_legend(nrow = 2, override.aes = list(size = 1))) +
geom_label_repel(data = novedata[novedata$pocet == 100,],
aes(fill = parametre, label = data),
box.padding = unit(1, "lines"),
point.padding = unit(2, 'lines'),
colour = "black",
fontface = "bold",
size = 2.5) +
facet_grid(parametre ~., scales = "free")
plot
ggsave(
plot = plot,
file = "test_pocet_vstupnych_dat.pdf",
dpi=300,
width=17,
height=14,
units = "cm"
)
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/Obrazky z R do techu")
pdf.options(encoding='ISOLatin2.enc')
ggsave(
plot = plot,
file = "test_pocet_vstupnych_dat.pdf",
dpi=300,
width=16,
height=14,
units = "cm"
)
# ggrepel dobre linky na nastevenie
# https://stackoverflow.com/questions/37664025/ggrepel-label-fill-color-questions
# https://github.com/slowkow/ggrepel/issues/82
#
plot = ggplot(data = novedata, aes(x = pocet, y = data, color = parametre)) +
geom_line(size = 0.5) +
# geom_point(data = dataGraf, aes(x = pocet, y =odhad, color = parametre),
#            position = position_jitter(width = 0.9, height = 0.3),
#            size = 2,alpha = 0.4) +
geom_point(data = novedata[novedata$pocet == 100,],aes(x = pocet, y = data)) +
labs(y="parametre elispy", x="veľkosť vstupných dát (x,y)") +
theme(legend.position="bottom") +
labs(colour = "parametre\nelipsy", fill = "parametre\nodhad") +
guides(colour = guide_legend(nrow = 2, override.aes = list(size = 1)),
fill = guide_legend(nrow = 2, override.aes = list(size = 1))) +
geom_label_repel(data = novedata[novedata$pocet == 100,],
aes(fill = parametre, label = data),
box.padding = unit(1, "lines"),
point.padding = unit(2, 'lines'),
colour = "black",
fontface = "bold",
size = 2.9) +
facet_grid(parametre ~., scales = "free")
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/Obrazky z R do techu")
pdf.options(encoding='ISOLatin2.enc')
ggsave(
plot = plot,
file = "test_pocet_vstupnych_dat.pdf",
dpi=300,
width=16,
height=14,
units = "cm"
)
plot
# ggrepel dobre linky na nastevenie
# https://stackoverflow.com/questions/37664025/ggrepel-label-fill-color-questions
# https://github.com/slowkow/ggrepel/issues/82
#
plot = ggplot(data = novedata, aes(x = pocet, y = data, color = parametre)) +
geom_line(size = 0.5) +
# geom_point(data = dataGraf, aes(x = pocet, y =odhad, color = parametre),
#            position = position_jitter(width = 0.9, height = 0.3),
#            size = 2,alpha = 0.4) +
geom_point(data = novedata[novedata$pocet == 100,],aes(x = pocet, y = data), size = 2) +
labs(y="parametre elispy", x="veľkosť vstupných dát (x,y)") +
theme(legend.position="bottom") +
labs(colour = "parametre\nelipsy", fill = "parametre\nodhad") +
guides(colour = guide_legend(nrow = 2, override.aes = list(size = 1)),
fill = guide_legend(nrow = 2, override.aes = list(size = 1))) +
geom_label_repel(data = novedata[novedata$pocet == 100,],
aes(fill = parametre, label = data),
box.padding = unit(1, "lines"),
point.padding = unit(2, 'lines'),
colour = "black",
fontface = "bold",
size = 2.9) +
facet_grid(parametre ~., scales = "free")
plot
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/Obrazky z R do techu")
pdf.options(encoding='ISOLatin2.enc')
ggsave(
plot = plot,
file = "test_pocet_vstupnych_dat.pdf",
dpi=300,
width=16,
height=14,
units = "cm"
)
# ggrepel dobre linky na nastevenie
# https://stackoverflow.com/questions/37664025/ggrepel-label-fill-color-questions
# https://github.com/slowkow/ggrepel/issues/82
#
plot = ggplot(data = novedata, aes(x = pocet, y = data, color = parametre)) +
geom_line(size = 0.5) +
# geom_point(data = dataGraf, aes(x = pocet, y =odhad, color = parametre),
#            position = position_jitter(width = 0.9, height = 0.3),
#            size = 2,alpha = 0.4) +
geom_point(data = novedata[novedata$pocet == 100,],aes(x = pocet, y = data),
size = 3) +
labs(y="parametre elispy", x="veľkosť vstupných dát (x,y)") +
theme(legend.position="bottom") +
labs(colour = "parametre\nelipsy", fill = "parametre\nodhad") +
guides(colour = guide_legend(nrow = 2, override.aes = list(size = 1)),
fill = guide_legend(nrow = 2, override.aes = list(size = 1))) +
geom_label_repel(data = novedata[novedata$pocet == 100,],
aes(fill = parametre, label = data),
box.padding = unit(1, "lines"),
point.padding = unit(2, 'lines'),
colour = "black",
fontface = "bold",
size = 2.9) +
facet_grid(parametre ~., scales = "free")
plot
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/Obrazky z R do techu")
pdf.options(encoding='ISOLatin2.enc')
ggsave(
plot = plot,
file = "test_pocet_vstupnych_dat.pdf",
dpi=300,
width=16,
height=14,
units = "cm"
)
ggplot(data = dataPlot) +
geom_point(aes(x = iteracia, y = oC))
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Testy/PocetIteracii")
load("testPocetIteracii.Rda")
data = vystupTest
rm(vystupTest)
matPlot = data[2:750,]
matPlot = rbind(matPlot,rep(0,10))
dataRozdiel = data - matPlot
dataRozdiel[seq(30,750,30),] = dataRozdiel[seq(29,750,30),]
dataRozdiel[,9] = rep(1:25, each = 30)
dataRozdiel = cbind(dataRozdiel,rep(c(1:30),25))
colnames(dataRozdiel)[10] = c("iteracia")
dataPlot = as.data.frame(dataRozdiel)
ggplot(data = dataPlot) +
geom_point(aes(x = iteracia, y = oC))
ggplot(data = dataPlot) +
geom_line(aes(x = iteracia, y = oC))
dataPlot
ggplot(data = dataPlot) +
geom_point(aes(x = iteracia, y = oC))
ggplot(data = dataPlot) +
geom_point(aes(x = iteracia, y = oB))
dataRozdiel
dataPlot = rbind(dataRozdiel[,c(1,9,10)],
dataRozdiel[,c(2,9,10)],
dataRozdiel[,c(3,9,10)],
dataRozdiel[,c(4,9,10)],
dataRozdiel[,c(5,9,10)])
dataPlot
dataRozdiel[,c(1,9,10)]
dataPlot = rbind(dataRozdiel[,1],
dataRozdiel[,2],
dataRozdiel[,3],
dataRozdiel[,4],
dataRozdiel[,5])
dataPlot
dataPlot = cbind(dataRozdiel[,1],
dataRozdiel[,2],
dataRozdiel[,3],
dataRozdiel[,4],
dataRozdiel[,5])
dataPlot
dataPlot = rbind(dataRozdiel[,1],
dataRozdiel[,2],
dataRozdiel[,3],
dataRozdiel[,4],
dataRozdiel[,5])
as.data.frame(dataPlot)
matrix(dataPlot,ncol = 1)
dataPlot = matrix(data = dataPlot, ncol = 1)
head(dataPlot)
head(dataRozdiel)
dataRozdiel[,1]
t(dataRozdiel[,1])
dataPlot = rbind(matrix(dataRozdiel[,1],ncol = 1),
matrix(dataRozdiel[,2],ncol = 1),
matrix(dataRozdiel[,3],ncol = 1),
matrix(dataRozdiel[,4],ncol = 1),
matrix(dataRozdiel[,5],ncol = 1))
dataPlot
rep(c(1:29),each = 3)
rep(c(1:29),by = 3)
head(dataRozdiel)
dataPlot = cbind(dataPlot, rep(dataRozdiel[,9]),by = 5)
dataPl
dataPlot
dataPlot = rbind(matrix(dataRozdiel[,1],ncol = 1),
matrix(dataRozdiel[,2],ncol = 1),
matrix(dataRozdiel[,3],ncol = 1),
matrix(dataRozdiel[,4],ncol = 1),
matrix(dataRozdiel[,5],ncol = 1))
dataPlot
dataPlot = cbind(dataPlot, rep(dataRozdiel[,9],by = 5))
dataPlot
dataRozdiel
dataPlot = rbind(matrix(dataRozdiel[,1],ncol = 1),
matrix(dataRozdiel[,2],ncol = 1),
matrix(dataRozdiel[,3],ncol = 1),
matrix(dataRozdiel[,4],ncol = 1),
matrix(dataRozdiel[,5],ncol = 1))
dataPlot = cbind(dataPlot, rep(dataRozdiel[,9],by = 5),
rep(dataRozdiel[,10],by = 5))
dataPlot
rep(c(1,2,3), each = 10)
dim(dataRozdiel)
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Testy/PocetIteracii")
load("testPocetIteracii.Rda")
data = vystupTest
rm(vystupTest)
matPlot = data[2:750,]
matPlot = rbind(matPlot,rep(0,10))
dataRozdiel = data - matPlot
dataRozdiel[seq(30,750,30),] = dataRozdiel[seq(29,750,30),]
dataRozdiel[,9] = rep(1:25, each = 30)
dataRozdiel = cbind(dataRozdiel,rep(c(1:30),25))
colnames(dataRozdiel)[10] = c("iteracia")
dataPlot = rbind(matrix(dataRozdiel[,1],ncol = 1),
matrix(dataRozdiel[,2],ncol = 1),
matrix(dataRozdiel[,3],ncol = 1),
matrix(dataRozdiel[,4],ncol = 1),
matrix(dataRozdiel[,5],ncol = 1))
dataPlot = cbind(dataPlot, rep(dataRozdiel[,9],by = 5),
rep(dataRozdiel[,10],by = 5),
rep(c(3,-2,-5,-4,10),750))
colnames(dataPlot) = c("data", "odhad", "iteracia","parametre")
head(dataPlot)
matPlot = data[2:750,]
matPlot = rbind(matPlot,rep(0,10))
dataRozdiel = data - matPlot
dataRozdiel[seq(30,750,30),] = dataRozdiel[seq(29,750,30),]
dataRozdiel[,9] = rep(1:25, each = 30)
dataRozdiel = cbind(dataRozdiel,rep(c(1:30),25))
colnames(dataRozdiel)[10] = c("iteracia")
dataPlot = rbind(matrix(dataRozdiel[,1],ncol = 1),
matrix(dataRozdiel[,2],ncol = 1),
matrix(dataRozdiel[,3],ncol = 1),
matrix(dataRozdiel[,4],ncol = 1),
matrix(dataRozdiel[,5],ncol = 1))
dataPlot = cbind(dataPlot, rep(dataRozdiel[,9],by = 5),
rep(dataRozdiel[,10],by = 5),
rep(c(3,-2,-5,-4,10), each = 750))
colnames(dataPlot) = c("data", "odhad", "iteracia","parametre")
head(dataPlot)
tail(dataPlot, c(400:450))
tail(dataPlot, 400)
tail(dataPlot)
head(dataPlot)
head(dataRozdiel)
dataPlot$parametre = as.factor(dataPlot$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
dataPlot
dataPlot = as.data.frame(dataPlot)
colnames(dataPlot) = c("data", "odhad", "iteracia","parametre")
dataPlot$parametre = as.factor(dataPlot$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
dataPlot$parametre = factor(dataPlot$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
dataPlot
head(dataPlot)
head(dataPlot,20)
head(dataPlot,30)
head(dataPlot,40)
dataRozdiel
head(dataRp)
head(dataRozdiel,50)
head(dataPlot,40)
head(dataRozdiel,40)
dataRozdiel[,1:4]
dim(dataRozdiel)
30*25
seq(1,100,by = 3)
seq(1,750,by = 30)
seq(1,750,by = 29)
seq(1,750,by = 30)
std = matrix(data = NA, nrow = 25, ncol = 1)
for (i in 1:5) {
for (j in 0:19) {
for (k in seq(1,750,by = 30)) {
j
}
}
}
for (i in 1:5) {
for (j in 0:19) {
for (k in seq(1,750,by = 30)) {
cat(j)
}
}
}
for (i in 1:5) {
for (j in 0:24) {
for (k in seq(1,750,by = 30)) {
cat(j)
}
}
}
dataRozdiel
head(dataRozdiel)
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
std = matrix(data = NA, nrow = 30, ncol = 5)
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
std
dataPlot = as.data.frame(std)
dataPlot
dataPlot = rbind(matrix(dataPlot[,1], ncol = 1),
matrix(dataPlot[,2], ncol = 1),
matrix(dataPlot[,3], ncol = 1),
matrix(dataPlot[,4], ncol = 1),
matrix(dataPlot[,5], ncol = 1))
rep(c(1:5), by = 5)
rep(1,5, by = 5)
rep(1,5, ach = 5)
rep(1,5, each = 5)
rep(1,5, by = 5)
rep(1:5, each = 5)
rep(c(1,3,6), each = 5)
dataPlot = cbind(dataPlot, rep(c(3,-2,-5,-4,10), each = 5))
head(dataPlot,40)
path = setwd("C:/Users/marek/Dropbox/Skola/Diplomovka/R/Testy/PocetIteracii")
load("testPocetIteracii.Rda")
data = vystupTest
rm(vystupTest)
matPlot = data[2:750,]
matPlot = rbind(matPlot,rep(0,10))
dataRozdiel = data - matPlot
dataRozdiel[seq(30,750,30),] = dataRozdiel[seq(29,750,30),]
dataRozdiel[,9] = rep(1:25, each = 30)
dataRozdiel = cbind(dataRozdiel,rep(c(1:30),25))
colnames(dataRozdiel)[10] = c("iteracia")
dataPlot = rbind(matrix(dataRozdiel[,1],ncol = 1),
matrix(dataRozdiel[,2],ncol = 1),
matrix(dataRozdiel[,3],ncol = 1),
matrix(dataRozdiel[,4],ncol = 1),
matrix(dataRozdiel[,5],ncol = 1))
dataPlot = cbind(dataPlot, rep(dataRozdiel[,9],by = 5),
rep(dataRozdiel[,10],by = 5),
rep(c(3,-2,-5,-4,10), each = 750))
dataPlot = as.data.frame(dataPlot)
colnames(dataPlot) = c("data", "odhad", "iteracia","parametre")
dataPlot$parametre = factor(dataPlot$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
std = matrix(data = NA, nrow = 30, ncol = 5)
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
dataPlot = as.data.frame(std)
dataPlot = rbind(matrix(dataPlot[,1], ncol = 1),
matrix(dataPlot[,2], ncol = 1),
matrix(dataPlot[,3], ncol = 1),
matrix(dataPlot[,4], ncol = 1),
matrix(dataPlot[,5], ncol = 1))
dataPlot = cbind(dataPlot, rep(c(3,-2,-5,-4,10), each = 30))
head(dataPlot,40)
dataPlot1 = as.data.frame(dataPlot1)
dataPlot1 = as.data.frame(std)
dataPlot1 = rbind(matrix(dataPlot1[,1], ncol = 1),
matrix(dataPlot1[,2], ncol = 1),
matrix(dataPlot1[,3], ncol = 1),
matrix(dataPlot1[,4], ncol = 1),
matrix(dataPlot1[,5], ncol = 1))
dataPlot1 = cbind(dataPlot1, rep(c(3,-2,-5,-4,10), each = 30))
dataPlot1 = as.data.frame(dataPlot1)
colnames(dataPlot1) = c("std" , "parametre")
dataPlot1$parametre = factor(dataPlot1$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
dataPlot1
dataPlot1 = as.data.frame(std)
dataPlot1 = rbind(matrix(dataPlot1[,1], ncol = 1),
matrix(dataPlot1[,2], ncol = 1),
matrix(dataPlot1[,3], ncol = 1),
matrix(dataPlot1[,4], ncol = 1),
matrix(dataPlot1[,5], ncol = 1))
dataPlot1 = cbind(dataPlot1,
rep(c(3,-2,-5,-4,10), each = 30),
rep(c(1:30), each = 5))
dataPlot1 = as.data.frame(dataPlot1)
colnames(dataPlot1) = c("std" , "parametre", "iteracia")
dataPlot1$parametre = factor(dataPlot1$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
dataPlot1
dataPlot1 = as.data.frame(std)
dataPlot1 = rbind(matrix(dataPlot1[,1], ncol = 1),
matrix(dataPlot1[,2], ncol = 1),
matrix(dataPlot1[,3], ncol = 1),
matrix(dataPlot1[,4], ncol = 1),
matrix(dataPlot1[,5], ncol = 1))
dataPlot1 = cbind(dataPlot1,
rep(c(3,-2,-5,-4,10), by = 30),
rep(c(1:30), each = 5))
dataPlot1 = as.data.frame(dataPlot1)
colnames(dataPlot1) = c("std" , "parametre", "iteracia")
dataPlot1$parametre = factor(dataPlot1$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
head(dataPlot1)
rep(1,30,by = 5)
rep(1:30,by = 5)
rep(1:30,each = 5)
rep(c(1:30),by = 5)
rep(1:30,by = 5)
rep(1:3,by = 5)
rep(1:3,each = 5)
seq(c(1:30), by = 5)
seq(1,30,4)
rep(1:30,by = 5)
rep(c(1:30),5)
dataPlot1 = as.data.frame(std)
dataPlot1 = rbind(matrix(dataPlot1[,1], ncol = 1),
matrix(dataPlot1[,2], ncol = 1),
matrix(dataPlot1[,3], ncol = 1),
matrix(dataPlot1[,4], ncol = 1),
matrix(dataPlot1[,5], ncol = 1))
dataPlot1 = cbind(dataPlot1,
rep(c(3,-2,-5,-4,10), by = 30),
rep(c(1:30), 5))
dataPlot1 = as.data.frame(dataPlot1)
colnames(dataPlot1) = c("std" , "parametre", "iteracia")
dataPlot1$parametre = factor(dataPlot1$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
dataPlot1
plot = ggplot(data = dataPlot1, aes(x = iteracia, y = std, color = parametre)) +
geom_point()
plot
plot = ggplot(data = dataPlot1, aes(x = iteracia, y = std, color = parametre)) +
geom_point() +
facet_grid(parametre ~., scales = "free")
plot
std = matrix(data = NA, nrow = 30, ncol = 5)
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
dataPlot1 = as.data.frame(std)
dataPlot1
rep(c(3,-2,-5,-4,10), by = 30)
rep(c(3,-2,-5,-4,10), 30)
rep(c(3,-2,-5,-4,10), each = 30)
std = matrix(data = NA, nrow = 30, ncol = 5)
for (i in 1:5) {
for (j in 1:30) {
std[j,i] = mean(dataRozdiel[dataRozdiel$iteracia == j,i])
}
}
dataPlot1 = as.data.frame(std)
dataPlot1 = rbind(matrix(dataPlot1[,1], ncol = 1),
matrix(dataPlot1[,2], ncol = 1),
matrix(dataPlot1[,3], ncol = 1),
matrix(dataPlot1[,4], ncol = 1),
matrix(dataPlot1[,5], ncol = 1))
dataPlot1 = cbind(dataPlot1,
rep(c(3,-2,-5,-4,10), each = 30),
rep(c(1:30), 5))
dataPlot1 = as.data.frame(dataPlot1)
colnames(dataPlot1) = c("std" , "parametre", "iteracia")
dataPlot1$parametre = factor(dataPlot1$parametre,
levels = c(3,-2,-5,-4,10),
labels = c("B","C","D","F","G"))
plot = ggplot(data = dataPlot1, aes(x = iteracia, y = std, color = parametre)) +
geom_point() +
facet_grid(parametre ~., scales = "free")
plot
plot = ggplot(data = dataPlot1, aes(x = iteracia, y = std, color = parametre)) +
geom_line() +
facet_grid(parametre ~., scales = "free")
plot
